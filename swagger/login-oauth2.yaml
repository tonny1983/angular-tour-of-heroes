openapi: 3.0.1
info:
  title: Login API
  description: Oauth2 is used for authenzation and authorization. WSO2 Identity Server is as IDP.
  version: 5.8.0
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    oauth2:
      type: oauth2
      flows:
        password:
          tokenUrl: /token
          scopes:
            user: openid email
  schemas:
    TokenInfo:
      title: Token information from IDP.
      type: object
      properties:
        access_token:
          type: string
          description: token used when acccessing oauth2 protected API.
        refresh_token:
          type: string
          description: token used to get a new access_token if current access_token is expired.
        scope:
          type: string
          description: must be as the same as the value in request body which is 'openid email'.
        id_token:
          type: string
          description: OpenID token value
        tokentype:
          type: string
          default: 'Bearer'
        expires_in:
          type: number
          description: value which indicates the access_token will expire after this period in the unit of second.
          default: 3600
    ErrorInfo:
      title: error information from IDP.
      type: object
      properties:
        error_description:
          type: string
          description: some detail description of the error
        error:
          type: string
          description: simple description of the error
    UserInfo:
      title: user information from IDP.
      type: object
      properties:
        sub:
          type: string
          description: subject of the user (= userid).
        name:
          type: string
          description: user's name
        Roles:
          type: string
          description: comma-separated roles list
        email:
          type: string
          format: email
          description: user's email address if available
security:
  - basicAuth: []
  - oauth2: [user]
servers:
  - url: https://is.eorionsolution.com/oauth2
paths:
  /token:
    post:
      summary: Returns Oauth2 token.
      operationId: getToken
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  default: 'password'
                uername:
                  type: string
                password:
                  type: string
                scope:
                  type: string
                  default: 'openid email'
              required:
                - grant_type
                - username
                - password
                - scope
      responses:
        200:
          description: token information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenInfo'
        400:
          description: wrong information provided for requesting token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
  /userinfo:
    get:
      summary: Return User information.
      operationId: getUserInfo
      security:
        - oauth2: [user]
      responses:
        200:
          description: user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        401:
          description: wrong bearer token provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
